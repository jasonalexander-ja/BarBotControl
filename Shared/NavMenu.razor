@using BarBotControl.Config

@inject SessionService SessionService
@inject ILocalStorageService LocalStorage


@if (IsAuthed)
{
    <MudNavMenu>
        <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
        <MudNavLink Href="Counter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Counter</MudNavLink>
        <MudNavLink Href="Users" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.SupervisedUserCircle">Users</MudNavLink>
        <MudNavLink Href="Modules" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.AccountTree">Modules</MudNavLink>
    </MudNavMenu>
}
else 
{
    <MudNavMenu>
        <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
        <MudNavLink Href="Counter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Counter</MudNavLink>
        <MudNavLink Href="SudoIn" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Login">Sudo In</MudNavLink>
    </MudNavMenu>
}

@code {
    public bool IsAuthed { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        string token = await LocalStorage.GetItemAsStringAsync(SessionKeys.SessionTokenKey) ?? "";

        IsAuthed = SessionService.CheckSession(token);
        StateHasChanged();
        await base.OnAfterRenderAsync(firstRender);
    }
}
