@using BarBotControl.Exceptions.SudoUser
@inherits AuthedPageBase
@page "/SequenceNew"

@inject SequenceService SequenceService
@inject ISnackbar Snackbar
@inject NavigationManager Navigation


<MudGrid Class="pb-2" Spacing="0" Justify="Justify.Center">
    <MudItem xs="12" sm="7">
        <MudText Typo="Typo.h6" Class="d-flex align-center px-1">
            <MudIconButton 
                Icon="@Icons.Material.Filled.ArrowBack"
                aria-label="Go Back"
                OnClick=@(() => Navigation.NavigateTo("/Sequences"))
                Size="Size.Medium"
                Color="Color.Secondary"
            />
            New Sequence
        </MudText>
    </MudItem>
</MudGrid>

<MudForm @ref="Form">
    <EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
        <MudGrid Justify="Justify.Center">
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>
                        <MudGrid Spacing="1">
                            <MudItem xs="12">
                                <MudTextField 
                                    T="string" 
                                    Label="Name" 
                                    @bind-Value="Model.Name" 
                                    For=@(() => Model.Name)
                                    Variant="Variant.Filled"
                                />
                            </MudItem>
                            <MudItem xs="12">
                                <MudTextField 
                                    T="string" 
                                    Label="Description" 
                                    Required="true"
                                    Lines="3"
                                    @bind-Value="Model.Description" 
                                    For=@(() => Model.Description)
                                    Variant="Variant.Filled"
                                />
                            </MudItem>
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>
        <MudGrid Justify="Justify.Center" Class="pt-2">
            <MudItem xs="12" sm="7">
                <MudGrid Justify="Justify.FlexStart" Spacing="1">
                    <MudItem md="4" sm="6" xs="12">
                        <MudButton 
                            Variant="Variant.Filled" 
                            aria-label="Save edit"
                            Color="Color.Primary"
                            ButtonType="ButtonType.Submit"
                            DisableElevation="true" 
                            FullWidth="true"
                        >
                            Save
                        </MudButton>
                    </MudItem>
                    <MudItem md="4" sm="6" xs="12">
                        <MudButton 
                            Variant="Variant.Filled" 
                            Color="Color.Secondary"
                            aria-label="Go Back"
                            OnClick=@(() => Navigation.NavigateTo("/Sequences"))
                            DisableElevation="true" 
                            FullWidth="true"
                        >
                            Back 
                        </MudButton>
                    </MudItem>
                </MudGrid>
            </MudItem>
        </MudGrid>
    </EditForm>
</MudForm>


@code {
    MudForm Form;
    public SequenceModel Model { get; set; } = new SequenceModel();

    private async Task OnValidSubmit(EditContext context)
    {
        await Form.Validate();
        if (!Form.IsValid)
        {
            Snackbar.Add("Ensure all fields are correctly filled out. ", Severity.Warning);
            return;
        }
        try
        {
            var newSequence = await SequenceService.AddSequence(Model);
            Snackbar.Add("Sequence created. ", Severity.Success);
            Navigation.NavigateTo($"/Sequence/{newSequence.SequenceId}");
        }
        catch
        {
            Snackbar.Add("Something went wrong there, go yell at Jason. ", Severity.Error);
        }
    }
}
